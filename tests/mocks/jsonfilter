#!/bin/sh
# Minimal jsonfilter supporting -e '$.value' and '@.ssid' and '@.list[@]'
read_input() { cat; }
INPUT=$(read_input)
expr=""
while [ $# -gt 0 ]; do
  case "$1" in
    -e) shift; expr=$1 ;;
    -l*) shift ;; # ignore length options like -l1
    *) shift ;;
  esac
done
case "$expr" in
  '$.value') echo "$INPUT" | sed -n 's/.*"value"[ ]*:[ ]*\([^}]*\).*/\1/p' ;;
  '$.value[0]') echo "$INPUT" | sed -n 's/.*"value"[ ]*:[ ]*\["\([^"\]*\)".*/\1/p' ;;
  '$.value[1]') echo "$INPUT" | sed -n 's/.*"value"[ ]*:[ ]*\["[^"\]*","\([^"\]*\)".*/\1/p' ;;
  '$.value[2]') echo "$INPUT" | sed -n 's/.*"value"[ ]*:[ ]*\["[^"\]*","[^"\]*","\([^"\]*\)".*/\1/p' ;;
  '@.ssid') echo "$INPUT" | sed -n 's/.*"ssid"[ ]*:[ ]*"\(.*\)".*/\1/p' ;;
  '@.list[@]') echo "$INPUT" | sed -n 's/.*"list"[ ]*:[ ]*\[\(.*\)\].*/\1/p' | tr ',' '\n' | sed 's/^[ ]*\"//;s/\"$//' ;;
  *)
    # Any selector containing txt[...].txt[*] -> output each TXT item on its own line, trimming quotes/space
    if printf '%s' "$expr" | grep -q 'txt\['; then
      echo "$INPUT" | sed -n 's/.*"txt"[ ]*:[ ]*\[\(.*\)\].*/\1/p' | tr ',' '\n' | sed 's/^[[:space:]]*\"//; s/\"[[:space:]]*$//'
    fi
    ;;
esac
